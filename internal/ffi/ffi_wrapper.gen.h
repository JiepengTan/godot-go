#ifndef CGO_GODOT_GO_GDEXTENSION_WRAPPER_H
#define CGO_GODOT_GO_GDEXTENSION_WRAPPER_H
/*------------------------------------------------------------------------------
//   This code was generated by template ffi_wrapper.h.tmpl.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "ffi_wrapper.h.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/
#include <stdlib.h>
#include <gdextension_interface.h>

typedef uintptr_t pointer;
typedef const char* string;
typedef char32_t rune;
typedef uint8_t * bytes;
typedef GDExtensionBool gdbool;

void cgo_GDExtensionVariantFromTypeConstructorFunc(const GDExtensionVariantFromTypeConstructorFunc fn,GDExtensionUninitializedVariantPtr arg_0,GDExtensionTypePtr arg_1) {
 fn(arg_0,arg_1);
}
void cgo_GDExtensionTypeFromVariantConstructorFunc(const GDExtensionTypeFromVariantConstructorFunc fn,GDExtensionUninitializedTypePtr arg_0,GDExtensionVariantPtr arg_1) {
 fn(arg_0,arg_1);
}
void cgo_GDExtensionPtrOperatorEvaluator(const GDExtensionPtrOperatorEvaluator fn,GDExtensionConstTypePtr p_left,GDExtensionConstTypePtr p_right,GDExtensionTypePtr r_result) {
 fn(p_left,p_right,r_result);
}
void cgo_GDExtensionPtrBuiltInMethod(const GDExtensionPtrBuiltInMethod fn,GDExtensionTypePtr p_base,const GDExtensionConstTypePtr *  p_args,GDExtensionTypePtr r_return,int p_argument_count) {
 fn(p_base,p_args,r_return,p_argument_count);
}
void cgo_GDExtensionPtrConstructor(const GDExtensionPtrConstructor fn,GDExtensionUninitializedTypePtr p_base,const GDExtensionConstTypePtr *  p_args) {
 fn(p_base,p_args);
}
void cgo_GDExtensionPtrDestructor(const GDExtensionPtrDestructor fn,GDExtensionTypePtr p_base) {
 fn(p_base);
}
void cgo_GDExtensionPtrSetter(const GDExtensionPtrSetter fn,GDExtensionTypePtr p_base,GDExtensionConstTypePtr p_value) {
 fn(p_base,p_value);
}
void cgo_GDExtensionPtrGetter(const GDExtensionPtrGetter fn,GDExtensionConstTypePtr p_base,GDExtensionTypePtr r_value) {
 fn(p_base,r_value);
}
void cgo_GDExtensionPtrIndexedSetter(const GDExtensionPtrIndexedSetter fn,GDExtensionTypePtr p_base,GDExtensionInt p_index,GDExtensionConstTypePtr p_value) {
 fn(p_base,p_index,p_value);
}
void cgo_GDExtensionPtrIndexedGetter(const GDExtensionPtrIndexedGetter fn,GDExtensionConstTypePtr p_base,GDExtensionInt p_index,GDExtensionTypePtr r_value) {
 fn(p_base,p_index,r_value);
}
void cgo_GDExtensionPtrKeyedSetter(const GDExtensionPtrKeyedSetter fn,GDExtensionTypePtr p_base,GDExtensionConstTypePtr p_key,GDExtensionConstTypePtr p_value) {
 fn(p_base,p_key,p_value);
}
void cgo_GDExtensionPtrKeyedGetter(const GDExtensionPtrKeyedGetter fn,GDExtensionConstTypePtr p_base,GDExtensionConstTypePtr p_key,GDExtensionTypePtr r_value) {
 fn(p_base,p_key,r_value);
}
uint32_t cgo_GDExtensionPtrKeyedChecker(const GDExtensionPtrKeyedChecker fn,GDExtensionConstVariantPtr p_base,GDExtensionConstVariantPtr p_key) {
	return fn(p_base,p_key);
}
void cgo_GDExtensionPtrUtilityFunction(const GDExtensionPtrUtilityFunction fn,GDExtensionTypePtr r_return,const GDExtensionConstTypePtr *  p_args,int p_argument_count) {
 fn(r_return,p_args,p_argument_count);
}
GDExtensionObjectPtr cgo_GDExtensionClassConstructor(const GDExtensionClassConstructor fn) {
	return fn();
}
void *  cgo_GDExtensionInstanceBindingCreateCallback(const GDExtensionInstanceBindingCreateCallback fn,void *  p_token,void *  p_instance) {
	return fn(p_token,p_instance);
}
void cgo_GDExtensionInstanceBindingFreeCallback(const GDExtensionInstanceBindingFreeCallback fn,void *  p_token,void *  p_instance,void *  p_binding) {
 fn(p_token,p_instance,p_binding);
}
GDExtensionBool cgo_GDExtensionInstanceBindingReferenceCallback(const GDExtensionInstanceBindingReferenceCallback fn,void *  p_token,void *  p_binding,GDExtensionBool p_reference) {
	return fn(p_token,p_binding,p_reference);
}
GDExtensionBool cgo_GDExtensionClassSet(const GDExtensionClassSet fn,GDExtensionClassInstancePtr p_instance,GDExtensionConstStringNamePtr p_name,GDExtensionConstVariantPtr p_value) {
	return fn(p_instance,p_name,p_value);
}
GDExtensionBool cgo_GDExtensionClassGet(const GDExtensionClassGet fn,GDExtensionClassInstancePtr p_instance,GDExtensionConstStringNamePtr p_name,GDExtensionVariantPtr r_ret) {
	return fn(p_instance,p_name,r_ret);
}
uint64_t cgo_GDExtensionClassGetRID(const GDExtensionClassGetRID fn,GDExtensionClassInstancePtr p_instance) {
	return fn(p_instance);
}
const GDExtensionPropertyInfo *  cgo_GDExtensionClassGetPropertyList(const GDExtensionClassGetPropertyList fn,GDExtensionClassInstancePtr p_instance,uint32_t *  r_count) {
	return fn(p_instance,r_count);
}
void cgo_GDExtensionClassFreePropertyList(const GDExtensionClassFreePropertyList fn,GDExtensionClassInstancePtr p_instance,const GDExtensionPropertyInfo *  p_list) {
 fn(p_instance,p_list);
}
void cgo_GDExtensionClassFreePropertyList2(const GDExtensionClassFreePropertyList2 fn,GDExtensionClassInstancePtr p_instance,const GDExtensionPropertyInfo *  p_list,uint32_t p_count) {
 fn(p_instance,p_list,p_count);
}
GDExtensionBool cgo_GDExtensionClassPropertyCanRevert(const GDExtensionClassPropertyCanRevert fn,GDExtensionClassInstancePtr p_instance,GDExtensionConstStringNamePtr p_name) {
	return fn(p_instance,p_name);
}
GDExtensionBool cgo_GDExtensionClassPropertyGetRevert(const GDExtensionClassPropertyGetRevert fn,GDExtensionClassInstancePtr p_instance,GDExtensionConstStringNamePtr p_name,GDExtensionVariantPtr r_ret) {
	return fn(p_instance,p_name,r_ret);
}
GDExtensionBool cgo_GDExtensionClassValidateProperty(const GDExtensionClassValidateProperty fn,GDExtensionClassInstancePtr p_instance,GDExtensionPropertyInfo *  p_property) {
	return fn(p_instance,p_property);
}
void cgo_GDExtensionClassNotification(const GDExtensionClassNotification fn,GDExtensionClassInstancePtr p_instance,int32_t p_what) {
 fn(p_instance,p_what);
}
void cgo_GDExtensionClassNotification2(const GDExtensionClassNotification2 fn,GDExtensionClassInstancePtr p_instance,int32_t p_what,GDExtensionBool p_reversed) {
 fn(p_instance,p_what,p_reversed);
}
void cgo_GDExtensionClassToString(const GDExtensionClassToString fn,GDExtensionClassInstancePtr p_instance,GDExtensionBool *  r_is_valid,GDExtensionStringPtr p_out) {
 fn(p_instance,r_is_valid,p_out);
}
void cgo_GDExtensionClassReference(const GDExtensionClassReference fn,GDExtensionClassInstancePtr p_instance) {
 fn(p_instance);
}
void cgo_GDExtensionClassUnreference(const GDExtensionClassUnreference fn,GDExtensionClassInstancePtr p_instance) {
 fn(p_instance);
}
void cgo_GDExtensionClassCallVirtual(const GDExtensionClassCallVirtual fn,GDExtensionClassInstancePtr p_instance,const GDExtensionConstTypePtr *  p_args,GDExtensionTypePtr r_ret) {
 fn(p_instance,p_args,r_ret);
}
GDExtensionObjectPtr cgo_GDExtensionClassCreateInstance(const GDExtensionClassCreateInstance fn,void *  p_class_userdata) {
	return fn(p_class_userdata);
}
void cgo_GDExtensionClassFreeInstance(const GDExtensionClassFreeInstance fn,void *  p_class_userdata,GDExtensionClassInstancePtr p_instance) {
 fn(p_class_userdata,p_instance);
}
GDExtensionClassInstancePtr cgo_GDExtensionClassRecreateInstance(const GDExtensionClassRecreateInstance fn,void *  p_class_userdata,GDExtensionObjectPtr p_object) {
	return fn(p_class_userdata,p_object);
}
GDExtensionClassCallVirtual cgo_GDExtensionClassGetVirtual(const GDExtensionClassGetVirtual fn,void *  p_class_userdata,GDExtensionConstStringNamePtr p_name) {
	return fn(p_class_userdata,p_name);
}
void *  cgo_GDExtensionClassGetVirtualCallData(const GDExtensionClassGetVirtualCallData fn,void *  p_class_userdata,GDExtensionConstStringNamePtr p_name) {
	return fn(p_class_userdata,p_name);
}
void cgo_GDExtensionClassCallVirtualWithData(const GDExtensionClassCallVirtualWithData fn,GDExtensionClassInstancePtr p_instance,GDExtensionConstStringNamePtr p_name,void *  p_virtual_call_userdata,const GDExtensionConstTypePtr *  p_args,GDExtensionTypePtr r_ret) {
 fn(p_instance,p_name,p_virtual_call_userdata,p_args,r_ret);
}
void cgo_GDExtensionClassMethodCall(const GDExtensionClassMethodCall fn,void *  method_userdata,GDExtensionClassInstancePtr p_instance,const GDExtensionConstVariantPtr *  p_args,GDExtensionInt p_argument_count,GDExtensionVariantPtr r_return,GDExtensionCallError *  r_error) {
 fn(method_userdata,p_instance,p_args,p_argument_count,r_return,r_error);
}
void cgo_GDExtensionClassMethodValidatedCall(const GDExtensionClassMethodValidatedCall fn,void *  method_userdata,GDExtensionClassInstancePtr p_instance,const GDExtensionConstVariantPtr *  p_args,GDExtensionVariantPtr r_return) {
 fn(method_userdata,p_instance,p_args,r_return);
}
void cgo_GDExtensionClassMethodPtrCall(const GDExtensionClassMethodPtrCall fn,void *  method_userdata,GDExtensionClassInstancePtr p_instance,const GDExtensionConstTypePtr *  p_args,GDExtensionTypePtr r_ret) {
 fn(method_userdata,p_instance,p_args,r_ret);
}
void cgo_GDExtensionCallableCustomCall(const GDExtensionCallableCustomCall fn,void *  callable_userdata,const GDExtensionConstVariantPtr *  p_args,GDExtensionInt p_argument_count,GDExtensionVariantPtr r_return,GDExtensionCallError *  r_error) {
 fn(callable_userdata,p_args,p_argument_count,r_return,r_error);
}
GDExtensionBool cgo_GDExtensionCallableCustomIsValid(const GDExtensionCallableCustomIsValid fn,void *  callable_userdata) {
	return fn(callable_userdata);
}
void cgo_GDExtensionCallableCustomFree(const GDExtensionCallableCustomFree fn,void *  callable_userdata) {
 fn(callable_userdata);
}
uint32_t cgo_GDExtensionCallableCustomHash(const GDExtensionCallableCustomHash fn,void *  callable_userdata) {
	return fn(callable_userdata);
}
GDExtensionBool cgo_GDExtensionCallableCustomEqual(const GDExtensionCallableCustomEqual fn,void *  callable_userdata_a,void *  callable_userdata_b) {
	return fn(callable_userdata_a,callable_userdata_b);
}
GDExtensionBool cgo_GDExtensionCallableCustomLessThan(const GDExtensionCallableCustomLessThan fn,void *  callable_userdata_a,void *  callable_userdata_b) {
	return fn(callable_userdata_a,callable_userdata_b);
}
void cgo_GDExtensionCallableCustomToString(const GDExtensionCallableCustomToString fn,void *  callable_userdata,GDExtensionBool *  r_is_valid,GDExtensionStringPtr r_out) {
 fn(callable_userdata,r_is_valid,r_out);
}
GDExtensionInt cgo_GDExtensionCallableCustomGetArgumentCount(const GDExtensionCallableCustomGetArgumentCount fn,void *  callable_userdata,GDExtensionBool *  r_is_valid) {
	return fn(callable_userdata,r_is_valid);
}
GDExtensionBool cgo_GDExtensionScriptInstanceSet(const GDExtensionScriptInstanceSet fn,GDExtensionScriptInstanceDataPtr p_instance,GDExtensionConstStringNamePtr p_name,GDExtensionConstVariantPtr p_value) {
	return fn(p_instance,p_name,p_value);
}
GDExtensionBool cgo_GDExtensionScriptInstanceGet(const GDExtensionScriptInstanceGet fn,GDExtensionScriptInstanceDataPtr p_instance,GDExtensionConstStringNamePtr p_name,GDExtensionVariantPtr r_ret) {
	return fn(p_instance,p_name,r_ret);
}
const GDExtensionPropertyInfo *  cgo_GDExtensionScriptInstanceGetPropertyList(const GDExtensionScriptInstanceGetPropertyList fn,GDExtensionScriptInstanceDataPtr p_instance,uint32_t *  r_count) {
	return fn(p_instance,r_count);
}
void cgo_GDExtensionScriptInstanceFreePropertyList(const GDExtensionScriptInstanceFreePropertyList fn,GDExtensionScriptInstanceDataPtr p_instance,const GDExtensionPropertyInfo *  p_list) {
 fn(p_instance,p_list);
}
void cgo_GDExtensionScriptInstanceFreePropertyList2(const GDExtensionScriptInstanceFreePropertyList2 fn,GDExtensionScriptInstanceDataPtr p_instance,const GDExtensionPropertyInfo *  p_list,uint32_t p_count) {
 fn(p_instance,p_list,p_count);
}
GDExtensionBool cgo_GDExtensionScriptInstanceGetClassCategory(const GDExtensionScriptInstanceGetClassCategory fn,GDExtensionScriptInstanceDataPtr p_instance,GDExtensionPropertyInfo *  p_class_category) {
	return fn(p_instance,p_class_category);
}
GDExtensionVariantType cgo_GDExtensionScriptInstanceGetPropertyType(const GDExtensionScriptInstanceGetPropertyType fn,GDExtensionScriptInstanceDataPtr p_instance,GDExtensionConstStringNamePtr p_name,GDExtensionBool *  r_is_valid) {
	return fn(p_instance,p_name,r_is_valid);
}
GDExtensionBool cgo_GDExtensionScriptInstanceValidateProperty(const GDExtensionScriptInstanceValidateProperty fn,GDExtensionScriptInstanceDataPtr p_instance,GDExtensionPropertyInfo *  p_property) {
	return fn(p_instance,p_property);
}
GDExtensionBool cgo_GDExtensionScriptInstancePropertyCanRevert(const GDExtensionScriptInstancePropertyCanRevert fn,GDExtensionScriptInstanceDataPtr p_instance,GDExtensionConstStringNamePtr p_name) {
	return fn(p_instance,p_name);
}
GDExtensionBool cgo_GDExtensionScriptInstancePropertyGetRevert(const GDExtensionScriptInstancePropertyGetRevert fn,GDExtensionScriptInstanceDataPtr p_instance,GDExtensionConstStringNamePtr p_name,GDExtensionVariantPtr r_ret) {
	return fn(p_instance,p_name,r_ret);
}
GDExtensionObjectPtr cgo_GDExtensionScriptInstanceGetOwner(const GDExtensionScriptInstanceGetOwner fn,GDExtensionScriptInstanceDataPtr p_instance) {
	return fn(p_instance);
}
void cgo_GDExtensionScriptInstancePropertyStateAdd(const GDExtensionScriptInstancePropertyStateAdd fn,GDExtensionConstStringNamePtr p_name,GDExtensionConstVariantPtr p_value,void *  p_userdata) {
 fn(p_name,p_value,p_userdata);
}
void cgo_GDExtensionScriptInstanceGetPropertyState(const GDExtensionScriptInstanceGetPropertyState fn,GDExtensionScriptInstanceDataPtr p_instance,GDExtensionScriptInstancePropertyStateAdd p_add_func,void *  p_userdata) {
 fn(p_instance,p_add_func,p_userdata);
}
const GDExtensionMethodInfo *  cgo_GDExtensionScriptInstanceGetMethodList(const GDExtensionScriptInstanceGetMethodList fn,GDExtensionScriptInstanceDataPtr p_instance,uint32_t *  r_count) {
	return fn(p_instance,r_count);
}
void cgo_GDExtensionScriptInstanceFreeMethodList(const GDExtensionScriptInstanceFreeMethodList fn,GDExtensionScriptInstanceDataPtr p_instance,const GDExtensionMethodInfo *  p_list) {
 fn(p_instance,p_list);
}
void cgo_GDExtensionScriptInstanceFreeMethodList2(const GDExtensionScriptInstanceFreeMethodList2 fn,GDExtensionScriptInstanceDataPtr p_instance,const GDExtensionMethodInfo *  p_list,uint32_t p_count) {
 fn(p_instance,p_list,p_count);
}
GDExtensionBool cgo_GDExtensionScriptInstanceHasMethod(const GDExtensionScriptInstanceHasMethod fn,GDExtensionScriptInstanceDataPtr p_instance,GDExtensionConstStringNamePtr p_name) {
	return fn(p_instance,p_name);
}
GDExtensionInt cgo_GDExtensionScriptInstanceGetMethodArgumentCount(const GDExtensionScriptInstanceGetMethodArgumentCount fn,GDExtensionScriptInstanceDataPtr p_instance,GDExtensionConstStringNamePtr p_name,GDExtensionBool *  r_is_valid) {
	return fn(p_instance,p_name,r_is_valid);
}
void cgo_GDExtensionScriptInstanceCall(const GDExtensionScriptInstanceCall fn,GDExtensionScriptInstanceDataPtr p_self,GDExtensionConstStringNamePtr p_method,const GDExtensionConstVariantPtr *  p_args,GDExtensionInt p_argument_count,GDExtensionVariantPtr r_return,GDExtensionCallError *  r_error) {
 fn(p_self,p_method,p_args,p_argument_count,r_return,r_error);
}
void cgo_GDExtensionScriptInstanceNotification(const GDExtensionScriptInstanceNotification fn,GDExtensionScriptInstanceDataPtr p_instance,int32_t p_what) {
 fn(p_instance,p_what);
}
void cgo_GDExtensionScriptInstanceNotification2(const GDExtensionScriptInstanceNotification2 fn,GDExtensionScriptInstanceDataPtr p_instance,int32_t p_what,GDExtensionBool p_reversed) {
 fn(p_instance,p_what,p_reversed);
}
void cgo_GDExtensionScriptInstanceToString(const GDExtensionScriptInstanceToString fn,GDExtensionScriptInstanceDataPtr p_instance,GDExtensionBool *  r_is_valid,GDExtensionStringPtr r_out) {
 fn(p_instance,r_is_valid,r_out);
}
void cgo_GDExtensionScriptInstanceRefCountIncremented(const GDExtensionScriptInstanceRefCountIncremented fn,GDExtensionScriptInstanceDataPtr p_instance) {
 fn(p_instance);
}
GDExtensionBool cgo_GDExtensionScriptInstanceRefCountDecremented(const GDExtensionScriptInstanceRefCountDecremented fn,GDExtensionScriptInstanceDataPtr p_instance) {
	return fn(p_instance);
}
GDExtensionObjectPtr cgo_GDExtensionScriptInstanceGetScript(const GDExtensionScriptInstanceGetScript fn,GDExtensionScriptInstanceDataPtr p_instance) {
	return fn(p_instance);
}
GDExtensionBool cgo_GDExtensionScriptInstanceIsPlaceholder(const GDExtensionScriptInstanceIsPlaceholder fn,GDExtensionScriptInstanceDataPtr p_instance) {
	return fn(p_instance);
}
GDExtensionScriptLanguagePtr cgo_GDExtensionScriptInstanceGetLanguage(const GDExtensionScriptInstanceGetLanguage fn,GDExtensionScriptInstanceDataPtr p_instance) {
	return fn(p_instance);
}
void cgo_GDExtensionScriptInstanceFree(const GDExtensionScriptInstanceFree fn,GDExtensionScriptInstanceDataPtr p_instance) {
 fn(p_instance);
}
void cgo_GDExtensionInterfaceFunctionPtr(const GDExtensionInterfaceFunctionPtr fn) {
 fn();
}
GDExtensionInterfaceFunctionPtr cgo_GDExtensionInterfaceGetProcAddress(const GDExtensionInterfaceGetProcAddress fn,const char *  p_function_name) {
	return fn(p_function_name);
}
GDExtensionBool cgo_GDExtensionInitializationFunction(const GDExtensionInitializationFunction fn,GDExtensionInterfaceGetProcAddress p_get_proc_address,GDExtensionClassLibraryPtr p_library,GDExtensionInitialization *  r_initialization) {
	return fn(p_get_proc_address,p_library,r_initialization);
}
void cgo_GDExtensionInterfaceGetGodotVersion(const GDExtensionInterfaceGetGodotVersion fn,GDExtensionGodotVersion *  r_godot_version) {
 fn(r_godot_version);
}
void *  cgo_GDExtensionInterfaceMemAlloc(const GDExtensionInterfaceMemAlloc fn,size_t p_bytes) {
	return fn(p_bytes);
}
void *  cgo_GDExtensionInterfaceMemRealloc(const GDExtensionInterfaceMemRealloc fn,void *  p_ptr,size_t p_bytes) {
	return fn(p_ptr,p_bytes);
}
void cgo_GDExtensionInterfaceMemFree(const GDExtensionInterfaceMemFree fn,void *  p_ptr) {
 fn(p_ptr);
}
void cgo_GDExtensionInterfacePrintError(const GDExtensionInterfacePrintError fn,const char *  p_description,const char *  p_function,const char *  p_file,int32_t p_line,GDExtensionBool p_editor_notify) {
 fn(p_description,p_function,p_file,p_line,p_editor_notify);
}
void cgo_GDExtensionInterfacePrintErrorWithMessage(const GDExtensionInterfacePrintErrorWithMessage fn,const char *  p_description,const char *  p_message,const char *  p_function,const char *  p_file,int32_t p_line,GDExtensionBool p_editor_notify) {
 fn(p_description,p_message,p_function,p_file,p_line,p_editor_notify);
}
void cgo_GDExtensionInterfacePrintWarning(const GDExtensionInterfacePrintWarning fn,const char *  p_description,const char *  p_function,const char *  p_file,int32_t p_line,GDExtensionBool p_editor_notify) {
 fn(p_description,p_function,p_file,p_line,p_editor_notify);
}
void cgo_GDExtensionInterfacePrintWarningWithMessage(const GDExtensionInterfacePrintWarningWithMessage fn,const char *  p_description,const char *  p_message,const char *  p_function,const char *  p_file,int32_t p_line,GDExtensionBool p_editor_notify) {
 fn(p_description,p_message,p_function,p_file,p_line,p_editor_notify);
}
void cgo_GDExtensionInterfacePrintScriptError(const GDExtensionInterfacePrintScriptError fn,const char *  p_description,const char *  p_function,const char *  p_file,int32_t p_line,GDExtensionBool p_editor_notify) {
 fn(p_description,p_function,p_file,p_line,p_editor_notify);
}
void cgo_GDExtensionInterfacePrintScriptErrorWithMessage(const GDExtensionInterfacePrintScriptErrorWithMessage fn,const char *  p_description,const char *  p_message,const char *  p_function,const char *  p_file,int32_t p_line,GDExtensionBool p_editor_notify) {
 fn(p_description,p_message,p_function,p_file,p_line,p_editor_notify);
}
uint64_t cgo_GDExtensionInterfaceGetNativeStructSize(const GDExtensionInterfaceGetNativeStructSize fn,GDExtensionConstStringNamePtr p_name) {
	return fn(p_name);
}
void cgo_GDExtensionInterfaceVariantNewCopy(const GDExtensionInterfaceVariantNewCopy fn,GDExtensionUninitializedVariantPtr r_dest,GDExtensionConstVariantPtr p_src) {
 fn(r_dest,p_src);
}
void cgo_GDExtensionInterfaceVariantNewNil(const GDExtensionInterfaceVariantNewNil fn,GDExtensionUninitializedVariantPtr r_dest) {
 fn(r_dest);
}
void cgo_GDExtensionInterfaceVariantDestroy(const GDExtensionInterfaceVariantDestroy fn,GDExtensionVariantPtr p_self) {
 fn(p_self);
}
void cgo_GDExtensionInterfaceVariantCall(const GDExtensionInterfaceVariantCall fn,GDExtensionVariantPtr p_self,GDExtensionConstStringNamePtr p_method,const GDExtensionConstVariantPtr *  p_args,GDExtensionInt p_argument_count,GDExtensionUninitializedVariantPtr r_return,GDExtensionCallError *  r_error) {
 fn(p_self,p_method,p_args,p_argument_count,r_return,r_error);
}
void cgo_GDExtensionInterfaceVariantCallStatic(const GDExtensionInterfaceVariantCallStatic fn,GDExtensionVariantType p_type,GDExtensionConstStringNamePtr p_method,const GDExtensionConstVariantPtr *  p_args,GDExtensionInt p_argument_count,GDExtensionUninitializedVariantPtr r_return,GDExtensionCallError *  r_error) {
 fn(p_type,p_method,p_args,p_argument_count,r_return,r_error);
}
void cgo_GDExtensionInterfaceVariantEvaluate(const GDExtensionInterfaceVariantEvaluate fn,GDExtensionVariantOperator p_op,GDExtensionConstVariantPtr p_a,GDExtensionConstVariantPtr p_b,GDExtensionUninitializedVariantPtr r_return,GDExtensionBool *  r_valid) {
 fn(p_op,p_a,p_b,r_return,r_valid);
}
void cgo_GDExtensionInterfaceVariantSet(const GDExtensionInterfaceVariantSet fn,GDExtensionVariantPtr p_self,GDExtensionConstVariantPtr p_key,GDExtensionConstVariantPtr p_value,GDExtensionBool *  r_valid) {
 fn(p_self,p_key,p_value,r_valid);
}
void cgo_GDExtensionInterfaceVariantSetNamed(const GDExtensionInterfaceVariantSetNamed fn,GDExtensionVariantPtr p_self,GDExtensionConstStringNamePtr p_key,GDExtensionConstVariantPtr p_value,GDExtensionBool *  r_valid) {
 fn(p_self,p_key,p_value,r_valid);
}
void cgo_GDExtensionInterfaceVariantSetKeyed(const GDExtensionInterfaceVariantSetKeyed fn,GDExtensionVariantPtr p_self,GDExtensionConstVariantPtr p_key,GDExtensionConstVariantPtr p_value,GDExtensionBool *  r_valid) {
 fn(p_self,p_key,p_value,r_valid);
}
void cgo_GDExtensionInterfaceVariantSetIndexed(const GDExtensionInterfaceVariantSetIndexed fn,GDExtensionVariantPtr p_self,GDExtensionInt p_index,GDExtensionConstVariantPtr p_value,GDExtensionBool *  r_valid,GDExtensionBool *  r_oob) {
 fn(p_self,p_index,p_value,r_valid,r_oob);
}
void cgo_GDExtensionInterfaceVariantGet(const GDExtensionInterfaceVariantGet fn,GDExtensionConstVariantPtr p_self,GDExtensionConstVariantPtr p_key,GDExtensionUninitializedVariantPtr r_ret,GDExtensionBool *  r_valid) {
 fn(p_self,p_key,r_ret,r_valid);
}
void cgo_GDExtensionInterfaceVariantGetNamed(const GDExtensionInterfaceVariantGetNamed fn,GDExtensionConstVariantPtr p_self,GDExtensionConstStringNamePtr p_key,GDExtensionUninitializedVariantPtr r_ret,GDExtensionBool *  r_valid) {
 fn(p_self,p_key,r_ret,r_valid);
}
void cgo_GDExtensionInterfaceVariantGetKeyed(const GDExtensionInterfaceVariantGetKeyed fn,GDExtensionConstVariantPtr p_self,GDExtensionConstVariantPtr p_key,GDExtensionUninitializedVariantPtr r_ret,GDExtensionBool *  r_valid) {
 fn(p_self,p_key,r_ret,r_valid);
}
void cgo_GDExtensionInterfaceVariantGetIndexed(const GDExtensionInterfaceVariantGetIndexed fn,GDExtensionConstVariantPtr p_self,GDExtensionInt p_index,GDExtensionUninitializedVariantPtr r_ret,GDExtensionBool *  r_valid,GDExtensionBool *  r_oob) {
 fn(p_self,p_index,r_ret,r_valid,r_oob);
}
GDExtensionBool cgo_GDExtensionInterfaceVariantIterInit(const GDExtensionInterfaceVariantIterInit fn,GDExtensionConstVariantPtr p_self,GDExtensionUninitializedVariantPtr r_iter,GDExtensionBool *  r_valid) {
	return fn(p_self,r_iter,r_valid);
}
GDExtensionBool cgo_GDExtensionInterfaceVariantIterNext(const GDExtensionInterfaceVariantIterNext fn,GDExtensionConstVariantPtr p_self,GDExtensionVariantPtr r_iter,GDExtensionBool *  r_valid) {
	return fn(p_self,r_iter,r_valid);
}
void cgo_GDExtensionInterfaceVariantIterGet(const GDExtensionInterfaceVariantIterGet fn,GDExtensionConstVariantPtr p_self,GDExtensionVariantPtr r_iter,GDExtensionUninitializedVariantPtr r_ret,GDExtensionBool *  r_valid) {
 fn(p_self,r_iter,r_ret,r_valid);
}
GDExtensionInt cgo_GDExtensionInterfaceVariantHash(const GDExtensionInterfaceVariantHash fn,GDExtensionConstVariantPtr p_self) {
	return fn(p_self);
}
GDExtensionInt cgo_GDExtensionInterfaceVariantRecursiveHash(const GDExtensionInterfaceVariantRecursiveHash fn,GDExtensionConstVariantPtr p_self,GDExtensionInt p_recursion_count) {
	return fn(p_self,p_recursion_count);
}
GDExtensionBool cgo_GDExtensionInterfaceVariantHashCompare(const GDExtensionInterfaceVariantHashCompare fn,GDExtensionConstVariantPtr p_self,GDExtensionConstVariantPtr p_other) {
	return fn(p_self,p_other);
}
GDExtensionBool cgo_GDExtensionInterfaceVariantBooleanize(const GDExtensionInterfaceVariantBooleanize fn,GDExtensionConstVariantPtr p_self) {
	return fn(p_self);
}
void cgo_GDExtensionInterfaceVariantDuplicate(const GDExtensionInterfaceVariantDuplicate fn,GDExtensionConstVariantPtr p_self,GDExtensionVariantPtr r_ret,GDExtensionBool p_deep) {
 fn(p_self,r_ret,p_deep);
}
void cgo_GDExtensionInterfaceVariantStringify(const GDExtensionInterfaceVariantStringify fn,GDExtensionConstVariantPtr p_self,GDExtensionStringPtr r_ret) {
 fn(p_self,r_ret);
}
GDExtensionVariantType cgo_GDExtensionInterfaceVariantGetType(const GDExtensionInterfaceVariantGetType fn,GDExtensionConstVariantPtr p_self) {
	return fn(p_self);
}
GDExtensionBool cgo_GDExtensionInterfaceVariantHasMethod(const GDExtensionInterfaceVariantHasMethod fn,GDExtensionConstVariantPtr p_self,GDExtensionConstStringNamePtr p_method) {
	return fn(p_self,p_method);
}
GDExtensionBool cgo_GDExtensionInterfaceVariantHasMember(const GDExtensionInterfaceVariantHasMember fn,GDExtensionVariantType p_type,GDExtensionConstStringNamePtr p_member) {
	return fn(p_type,p_member);
}
GDExtensionBool cgo_GDExtensionInterfaceVariantHasKey(const GDExtensionInterfaceVariantHasKey fn,GDExtensionConstVariantPtr p_self,GDExtensionConstVariantPtr p_key,GDExtensionBool *  r_valid) {
	return fn(p_self,p_key,r_valid);
}
void cgo_GDExtensionInterfaceVariantGetTypeName(const GDExtensionInterfaceVariantGetTypeName fn,GDExtensionVariantType p_type,GDExtensionUninitializedStringPtr r_name) {
 fn(p_type,r_name);
}
GDExtensionBool cgo_GDExtensionInterfaceVariantCanConvert(const GDExtensionInterfaceVariantCanConvert fn,GDExtensionVariantType p_from,GDExtensionVariantType p_to) {
	return fn(p_from,p_to);
}
GDExtensionBool cgo_GDExtensionInterfaceVariantCanConvertStrict(const GDExtensionInterfaceVariantCanConvertStrict fn,GDExtensionVariantType p_from,GDExtensionVariantType p_to) {
	return fn(p_from,p_to);
}
GDExtensionVariantFromTypeConstructorFunc cgo_GDExtensionInterfaceGetVariantFromTypeConstructor(const GDExtensionInterfaceGetVariantFromTypeConstructor fn,GDExtensionVariantType p_type) {
	return fn(p_type);
}
GDExtensionTypeFromVariantConstructorFunc cgo_GDExtensionInterfaceGetVariantToTypeConstructor(const GDExtensionInterfaceGetVariantToTypeConstructor fn,GDExtensionVariantType p_type) {
	return fn(p_type);
}
GDExtensionPtrOperatorEvaluator cgo_GDExtensionInterfaceVariantGetPtrOperatorEvaluator(const GDExtensionInterfaceVariantGetPtrOperatorEvaluator fn,GDExtensionVariantOperator p_operator,GDExtensionVariantType p_type_a,GDExtensionVariantType p_type_b) {
	return fn(p_operator,p_type_a,p_type_b);
}
GDExtensionPtrBuiltInMethod cgo_GDExtensionInterfaceVariantGetPtrBuiltinMethod(const GDExtensionInterfaceVariantGetPtrBuiltinMethod fn,GDExtensionVariantType p_type,GDExtensionConstStringNamePtr p_method,GDExtensionInt p_hash) {
	return fn(p_type,p_method,p_hash);
}
GDExtensionPtrConstructor cgo_GDExtensionInterfaceVariantGetPtrConstructor(const GDExtensionInterfaceVariantGetPtrConstructor fn,GDExtensionVariantType p_type,int32_t p_constructor) {
	return fn(p_type,p_constructor);
}
GDExtensionPtrDestructor cgo_GDExtensionInterfaceVariantGetPtrDestructor(const GDExtensionInterfaceVariantGetPtrDestructor fn,GDExtensionVariantType p_type) {
	return fn(p_type);
}
void cgo_GDExtensionInterfaceVariantConstruct(const GDExtensionInterfaceVariantConstruct fn,GDExtensionVariantType p_type,GDExtensionUninitializedVariantPtr r_base,const GDExtensionConstVariantPtr *  p_args,int32_t p_argument_count,GDExtensionCallError *  r_error) {
 fn(p_type,r_base,p_args,p_argument_count,r_error);
}
GDExtensionPtrSetter cgo_GDExtensionInterfaceVariantGetPtrSetter(const GDExtensionInterfaceVariantGetPtrSetter fn,GDExtensionVariantType p_type,GDExtensionConstStringNamePtr p_member) {
	return fn(p_type,p_member);
}
GDExtensionPtrGetter cgo_GDExtensionInterfaceVariantGetPtrGetter(const GDExtensionInterfaceVariantGetPtrGetter fn,GDExtensionVariantType p_type,GDExtensionConstStringNamePtr p_member) {
	return fn(p_type,p_member);
}
GDExtensionPtrIndexedSetter cgo_GDExtensionInterfaceVariantGetPtrIndexedSetter(const GDExtensionInterfaceVariantGetPtrIndexedSetter fn,GDExtensionVariantType p_type) {
	return fn(p_type);
}
GDExtensionPtrIndexedGetter cgo_GDExtensionInterfaceVariantGetPtrIndexedGetter(const GDExtensionInterfaceVariantGetPtrIndexedGetter fn,GDExtensionVariantType p_type) {
	return fn(p_type);
}
GDExtensionPtrKeyedSetter cgo_GDExtensionInterfaceVariantGetPtrKeyedSetter(const GDExtensionInterfaceVariantGetPtrKeyedSetter fn,GDExtensionVariantType p_type) {
	return fn(p_type);
}
GDExtensionPtrKeyedGetter cgo_GDExtensionInterfaceVariantGetPtrKeyedGetter(const GDExtensionInterfaceVariantGetPtrKeyedGetter fn,GDExtensionVariantType p_type) {
	return fn(p_type);
}
GDExtensionPtrKeyedChecker cgo_GDExtensionInterfaceVariantGetPtrKeyedChecker(const GDExtensionInterfaceVariantGetPtrKeyedChecker fn,GDExtensionVariantType p_type) {
	return fn(p_type);
}
void cgo_GDExtensionInterfaceVariantGetConstantValue(const GDExtensionInterfaceVariantGetConstantValue fn,GDExtensionVariantType p_type,GDExtensionConstStringNamePtr p_constant,GDExtensionUninitializedVariantPtr r_ret) {
 fn(p_type,p_constant,r_ret);
}
GDExtensionPtrUtilityFunction cgo_GDExtensionInterfaceVariantGetPtrUtilityFunction(const GDExtensionInterfaceVariantGetPtrUtilityFunction fn,GDExtensionConstStringNamePtr p_function,GDExtensionInt p_hash) {
	return fn(p_function,p_hash);
}
void cgo_GDExtensionInterfaceStringNewWithLatin1Chars(const GDExtensionInterfaceStringNewWithLatin1Chars fn,GDExtensionUninitializedStringPtr r_dest,const char *  p_contents) {
 fn(r_dest,p_contents);
}
void cgo_GDExtensionInterfaceStringNewWithUtf8Chars(const GDExtensionInterfaceStringNewWithUtf8Chars fn,GDExtensionUninitializedStringPtr r_dest,const char *  p_contents) {
 fn(r_dest,p_contents);
}
void cgo_GDExtensionInterfaceStringNewWithUtf16Chars(const GDExtensionInterfaceStringNewWithUtf16Chars fn,GDExtensionUninitializedStringPtr r_dest,const char16_t *  p_contents) {
 fn(r_dest,p_contents);
}
void cgo_GDExtensionInterfaceStringNewWithUtf32Chars(const GDExtensionInterfaceStringNewWithUtf32Chars fn,GDExtensionUninitializedStringPtr r_dest,const char32_t *  p_contents) {
 fn(r_dest,p_contents);
}
void cgo_GDExtensionInterfaceStringNewWithWideChars(const GDExtensionInterfaceStringNewWithWideChars fn,GDExtensionUninitializedStringPtr r_dest,const wchar_t *  p_contents) {
 fn(r_dest,p_contents);
}
void cgo_GDExtensionInterfaceStringNewWithLatin1CharsAndLen(const GDExtensionInterfaceStringNewWithLatin1CharsAndLen fn,GDExtensionUninitializedStringPtr r_dest,const char *  p_contents,GDExtensionInt p_size) {
 fn(r_dest,p_contents,p_size);
}
void cgo_GDExtensionInterfaceStringNewWithUtf8CharsAndLen(const GDExtensionInterfaceStringNewWithUtf8CharsAndLen fn,GDExtensionUninitializedStringPtr r_dest,const char *  p_contents,GDExtensionInt p_size) {
 fn(r_dest,p_contents,p_size);
}
GDExtensionInt cgo_GDExtensionInterfaceStringNewWithUtf8CharsAndLen2(const GDExtensionInterfaceStringNewWithUtf8CharsAndLen2 fn,GDExtensionUninitializedStringPtr r_dest,const char *  p_contents,GDExtensionInt p_size) {
	return fn(r_dest,p_contents,p_size);
}
void cgo_GDExtensionInterfaceStringNewWithUtf16CharsAndLen(const GDExtensionInterfaceStringNewWithUtf16CharsAndLen fn,GDExtensionUninitializedStringPtr r_dest,const char16_t *  p_contents,GDExtensionInt p_char_count) {
 fn(r_dest,p_contents,p_char_count);
}
GDExtensionInt cgo_GDExtensionInterfaceStringNewWithUtf16CharsAndLen2(const GDExtensionInterfaceStringNewWithUtf16CharsAndLen2 fn,GDExtensionUninitializedStringPtr r_dest,const char16_t *  p_contents,GDExtensionInt p_char_count,GDExtensionBool p_default_little_endian) {
	return fn(r_dest,p_contents,p_char_count,p_default_little_endian);
}
void cgo_GDExtensionInterfaceStringNewWithUtf32CharsAndLen(const GDExtensionInterfaceStringNewWithUtf32CharsAndLen fn,GDExtensionUninitializedStringPtr r_dest,const char32_t *  p_contents,GDExtensionInt p_char_count) {
 fn(r_dest,p_contents,p_char_count);
}
void cgo_GDExtensionInterfaceStringNewWithWideCharsAndLen(const GDExtensionInterfaceStringNewWithWideCharsAndLen fn,GDExtensionUninitializedStringPtr r_dest,const wchar_t *  p_contents,GDExtensionInt p_char_count) {
 fn(r_dest,p_contents,p_char_count);
}
GDExtensionInt cgo_GDExtensionInterfaceStringToLatin1Chars(const GDExtensionInterfaceStringToLatin1Chars fn,GDExtensionConstStringPtr p_self,char *  r_text,GDExtensionInt p_max_write_length) {
	return fn(p_self,r_text,p_max_write_length);
}
GDExtensionInt cgo_GDExtensionInterfaceStringToUtf8Chars(const GDExtensionInterfaceStringToUtf8Chars fn,GDExtensionConstStringPtr p_self,char *  r_text,GDExtensionInt p_max_write_length) {
	return fn(p_self,r_text,p_max_write_length);
}
GDExtensionInt cgo_GDExtensionInterfaceStringToUtf16Chars(const GDExtensionInterfaceStringToUtf16Chars fn,GDExtensionConstStringPtr p_self,char16_t *  r_text,GDExtensionInt p_max_write_length) {
	return fn(p_self,r_text,p_max_write_length);
}
GDExtensionInt cgo_GDExtensionInterfaceStringToUtf32Chars(const GDExtensionInterfaceStringToUtf32Chars fn,GDExtensionConstStringPtr p_self,char32_t *  r_text,GDExtensionInt p_max_write_length) {
	return fn(p_self,r_text,p_max_write_length);
}
GDExtensionInt cgo_GDExtensionInterfaceStringToWideChars(const GDExtensionInterfaceStringToWideChars fn,GDExtensionConstStringPtr p_self,wchar_t *  r_text,GDExtensionInt p_max_write_length) {
	return fn(p_self,r_text,p_max_write_length);
}
char32_t *  cgo_GDExtensionInterfaceStringOperatorIndex(const GDExtensionInterfaceStringOperatorIndex fn,GDExtensionStringPtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
const char32_t *  cgo_GDExtensionInterfaceStringOperatorIndexConst(const GDExtensionInterfaceStringOperatorIndexConst fn,GDExtensionConstStringPtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
void cgo_GDExtensionInterfaceStringOperatorPlusEqString(const GDExtensionInterfaceStringOperatorPlusEqString fn,GDExtensionStringPtr p_self,GDExtensionConstStringPtr p_b) {
 fn(p_self,p_b);
}
void cgo_GDExtensionInterfaceStringOperatorPlusEqChar(const GDExtensionInterfaceStringOperatorPlusEqChar fn,GDExtensionStringPtr p_self,char32_t p_b) {
 fn(p_self,p_b);
}
void cgo_GDExtensionInterfaceStringOperatorPlusEqCstr(const GDExtensionInterfaceStringOperatorPlusEqCstr fn,GDExtensionStringPtr p_self,const char *  p_b) {
 fn(p_self,p_b);
}
void cgo_GDExtensionInterfaceStringOperatorPlusEqWcstr(const GDExtensionInterfaceStringOperatorPlusEqWcstr fn,GDExtensionStringPtr p_self,const wchar_t *  p_b) {
 fn(p_self,p_b);
}
void cgo_GDExtensionInterfaceStringOperatorPlusEqC32str(const GDExtensionInterfaceStringOperatorPlusEqC32str fn,GDExtensionStringPtr p_self,const char32_t *  p_b) {
 fn(p_self,p_b);
}
GDExtensionInt cgo_GDExtensionInterfaceStringResize(const GDExtensionInterfaceStringResize fn,GDExtensionStringPtr p_self,GDExtensionInt p_resize) {
	return fn(p_self,p_resize);
}
void cgo_GDExtensionInterfaceStringNameNewWithLatin1Chars(const GDExtensionInterfaceStringNameNewWithLatin1Chars fn,GDExtensionUninitializedStringNamePtr r_dest,const char *  p_contents,GDExtensionBool p_is_static) {
 fn(r_dest,p_contents,p_is_static);
}
void cgo_GDExtensionInterfaceStringNameNewWithUtf8Chars(const GDExtensionInterfaceStringNameNewWithUtf8Chars fn,GDExtensionUninitializedStringNamePtr r_dest,const char *  p_contents) {
 fn(r_dest,p_contents);
}
void cgo_GDExtensionInterfaceStringNameNewWithUtf8CharsAndLen(const GDExtensionInterfaceStringNameNewWithUtf8CharsAndLen fn,GDExtensionUninitializedStringNamePtr r_dest,const char *  p_contents,GDExtensionInt p_size) {
 fn(r_dest,p_contents,p_size);
}
GDExtensionInt cgo_GDExtensionInterfaceXmlParserOpenBuffer(const GDExtensionInterfaceXmlParserOpenBuffer fn,GDExtensionObjectPtr p_instance,const uint8_t *  p_buffer,size_t p_size) {
	return fn(p_instance,p_buffer,p_size);
}
void cgo_GDExtensionInterfaceFileAccessStoreBuffer(const GDExtensionInterfaceFileAccessStoreBuffer fn,GDExtensionObjectPtr p_instance,const uint8_t *  p_src,uint64_t p_length) {
 fn(p_instance,p_src,p_length);
}
uint64_t cgo_GDExtensionInterfaceFileAccessGetBuffer(const GDExtensionInterfaceFileAccessGetBuffer fn,GDExtensionConstObjectPtr p_instance,uint8_t *  p_dst,uint64_t p_length) {
	return fn(p_instance,p_dst,p_length);
}
uint8_t *  cgo_GDExtensionInterfaceImagePtrw(const GDExtensionInterfaceImagePtrw fn,GDExtensionObjectPtr p_instance) {
	return fn(p_instance);
}
const uint8_t *  cgo_GDExtensionInterfaceImagePtr(const GDExtensionInterfaceImagePtr fn,GDExtensionObjectPtr p_instance) {
	return fn(p_instance);
}
int64_t cgo_GDExtensionInterfaceWorkerThreadPoolAddNativeGroupTask(const GDExtensionInterfaceWorkerThreadPoolAddNativeGroupTask fn,GDExtensionObjectPtr p_instance,void(*p_func)(void * ,uint32_t),void *  p_userdata,int p_elements,int p_tasks,GDExtensionBool p_high_priority,GDExtensionConstStringPtr p_description) {
	return fn(p_instance,p_func,p_userdata,p_elements,p_tasks,p_high_priority,p_description);
}
int64_t cgo_GDExtensionInterfaceWorkerThreadPoolAddNativeTask(const GDExtensionInterfaceWorkerThreadPoolAddNativeTask fn,GDExtensionObjectPtr p_instance,void(*p_func)(void * ),void *  p_userdata,GDExtensionBool p_high_priority,GDExtensionConstStringPtr p_description) {
	return fn(p_instance,p_func,p_userdata,p_high_priority,p_description);
}
uint8_t *  cgo_GDExtensionInterfacePackedByteArrayOperatorIndex(const GDExtensionInterfacePackedByteArrayOperatorIndex fn,GDExtensionTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
const uint8_t *  cgo_GDExtensionInterfacePackedByteArrayOperatorIndexConst(const GDExtensionInterfacePackedByteArrayOperatorIndexConst fn,GDExtensionConstTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
float *  cgo_GDExtensionInterfacePackedFloat32ArrayOperatorIndex(const GDExtensionInterfacePackedFloat32ArrayOperatorIndex fn,GDExtensionTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
const float *  cgo_GDExtensionInterfacePackedFloat32ArrayOperatorIndexConst(const GDExtensionInterfacePackedFloat32ArrayOperatorIndexConst fn,GDExtensionConstTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
double *  cgo_GDExtensionInterfacePackedFloat64ArrayOperatorIndex(const GDExtensionInterfacePackedFloat64ArrayOperatorIndex fn,GDExtensionTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
const double *  cgo_GDExtensionInterfacePackedFloat64ArrayOperatorIndexConst(const GDExtensionInterfacePackedFloat64ArrayOperatorIndexConst fn,GDExtensionConstTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
int32_t *  cgo_GDExtensionInterfacePackedInt32ArrayOperatorIndex(const GDExtensionInterfacePackedInt32ArrayOperatorIndex fn,GDExtensionTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
const int32_t *  cgo_GDExtensionInterfacePackedInt32ArrayOperatorIndexConst(const GDExtensionInterfacePackedInt32ArrayOperatorIndexConst fn,GDExtensionConstTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
int64_t *  cgo_GDExtensionInterfacePackedInt64ArrayOperatorIndex(const GDExtensionInterfacePackedInt64ArrayOperatorIndex fn,GDExtensionTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
const int64_t *  cgo_GDExtensionInterfacePackedInt64ArrayOperatorIndexConst(const GDExtensionInterfacePackedInt64ArrayOperatorIndexConst fn,GDExtensionConstTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
GDExtensionStringPtr cgo_GDExtensionInterfacePackedStringArrayOperatorIndex(const GDExtensionInterfacePackedStringArrayOperatorIndex fn,GDExtensionTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
GDExtensionStringPtr cgo_GDExtensionInterfacePackedStringArrayOperatorIndexConst(const GDExtensionInterfacePackedStringArrayOperatorIndexConst fn,GDExtensionConstTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
GDExtensionTypePtr cgo_GDExtensionInterfacePackedVector2ArrayOperatorIndex(const GDExtensionInterfacePackedVector2ArrayOperatorIndex fn,GDExtensionTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
GDExtensionTypePtr cgo_GDExtensionInterfacePackedVector2ArrayOperatorIndexConst(const GDExtensionInterfacePackedVector2ArrayOperatorIndexConst fn,GDExtensionConstTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
GDExtensionTypePtr cgo_GDExtensionInterfacePackedVector3ArrayOperatorIndex(const GDExtensionInterfacePackedVector3ArrayOperatorIndex fn,GDExtensionTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
GDExtensionTypePtr cgo_GDExtensionInterfacePackedVector3ArrayOperatorIndexConst(const GDExtensionInterfacePackedVector3ArrayOperatorIndexConst fn,GDExtensionConstTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
GDExtensionTypePtr cgo_GDExtensionInterfacePackedVector4ArrayOperatorIndex(const GDExtensionInterfacePackedVector4ArrayOperatorIndex fn,GDExtensionTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
GDExtensionTypePtr cgo_GDExtensionInterfacePackedVector4ArrayOperatorIndexConst(const GDExtensionInterfacePackedVector4ArrayOperatorIndexConst fn,GDExtensionConstTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
GDExtensionTypePtr cgo_GDExtensionInterfacePackedColorArrayOperatorIndex(const GDExtensionInterfacePackedColorArrayOperatorIndex fn,GDExtensionTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
GDExtensionTypePtr cgo_GDExtensionInterfacePackedColorArrayOperatorIndexConst(const GDExtensionInterfacePackedColorArrayOperatorIndexConst fn,GDExtensionConstTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
GDExtensionVariantPtr cgo_GDExtensionInterfaceArrayOperatorIndex(const GDExtensionInterfaceArrayOperatorIndex fn,GDExtensionTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
GDExtensionVariantPtr cgo_GDExtensionInterfaceArrayOperatorIndexConst(const GDExtensionInterfaceArrayOperatorIndexConst fn,GDExtensionConstTypePtr p_self,GDExtensionInt p_index) {
	return fn(p_self,p_index);
}
void cgo_GDExtensionInterfaceArrayRef(const GDExtensionInterfaceArrayRef fn,GDExtensionTypePtr p_self,GDExtensionConstTypePtr p_from) {
 fn(p_self,p_from);
}
void cgo_GDExtensionInterfaceArraySetTyped(const GDExtensionInterfaceArraySetTyped fn,GDExtensionTypePtr p_self,GDExtensionVariantType p_type,GDExtensionConstStringNamePtr p_class_name,GDExtensionConstVariantPtr p_script) {
 fn(p_self,p_type,p_class_name,p_script);
}
GDExtensionVariantPtr cgo_GDExtensionInterfaceDictionaryOperatorIndex(const GDExtensionInterfaceDictionaryOperatorIndex fn,GDExtensionTypePtr p_self,GDExtensionConstVariantPtr p_key) {
	return fn(p_self,p_key);
}
GDExtensionVariantPtr cgo_GDExtensionInterfaceDictionaryOperatorIndexConst(const GDExtensionInterfaceDictionaryOperatorIndexConst fn,GDExtensionConstTypePtr p_self,GDExtensionConstVariantPtr p_key) {
	return fn(p_self,p_key);
}
void cgo_GDExtensionInterfaceObjectMethodBindCall(const GDExtensionInterfaceObjectMethodBindCall fn,GDExtensionMethodBindPtr p_method_bind,GDExtensionObjectPtr p_instance,const GDExtensionConstVariantPtr *  p_args,GDExtensionInt p_arg_count,GDExtensionUninitializedVariantPtr r_ret,GDExtensionCallError *  r_error) {
 fn(p_method_bind,p_instance,p_args,p_arg_count,r_ret,r_error);
}
void cgo_GDExtensionInterfaceObjectMethodBindPtrcall(const GDExtensionInterfaceObjectMethodBindPtrcall fn,GDExtensionMethodBindPtr p_method_bind,GDExtensionObjectPtr p_instance,const GDExtensionConstTypePtr *  p_args,GDExtensionTypePtr r_ret) {
 fn(p_method_bind,p_instance,p_args,r_ret);
}
void cgo_GDExtensionInterfaceObjectDestroy(const GDExtensionInterfaceObjectDestroy fn,GDExtensionObjectPtr p_o) {
 fn(p_o);
}
GDExtensionObjectPtr cgo_GDExtensionInterfaceGlobalGetSingleton(const GDExtensionInterfaceGlobalGetSingleton fn,GDExtensionConstStringNamePtr p_name) {
	return fn(p_name);
}
void *  cgo_GDExtensionInterfaceObjectGetInstanceBinding(const GDExtensionInterfaceObjectGetInstanceBinding fn,GDExtensionObjectPtr p_o,void *  p_token,const GDExtensionInstanceBindingCallbacks *  p_callbacks) {
	return fn(p_o,p_token,p_callbacks);
}
void cgo_GDExtensionInterfaceObjectSetInstanceBinding(const GDExtensionInterfaceObjectSetInstanceBinding fn,GDExtensionObjectPtr p_o,void *  p_token,void *  p_binding,const GDExtensionInstanceBindingCallbacks *  p_callbacks) {
 fn(p_o,p_token,p_binding,p_callbacks);
}
void cgo_GDExtensionInterfaceObjectFreeInstanceBinding(const GDExtensionInterfaceObjectFreeInstanceBinding fn,GDExtensionObjectPtr p_o,void *  p_token) {
 fn(p_o,p_token);
}
void cgo_GDExtensionInterfaceObjectSetInstance(const GDExtensionInterfaceObjectSetInstance fn,GDExtensionObjectPtr p_o,GDExtensionConstStringNamePtr p_classname,GDExtensionClassInstancePtr p_instance) {
 fn(p_o,p_classname,p_instance);
}
GDExtensionBool cgo_GDExtensionInterfaceObjectGetClassName(const GDExtensionInterfaceObjectGetClassName fn,GDExtensionConstObjectPtr p_object,GDExtensionClassLibraryPtr p_library,GDExtensionUninitializedStringNamePtr r_class_name) {
	return fn(p_object,p_library,r_class_name);
}
GDExtensionObjectPtr cgo_GDExtensionInterfaceObjectCastTo(const GDExtensionInterfaceObjectCastTo fn,GDExtensionConstObjectPtr p_object,void *  p_class_tag) {
	return fn(p_object,p_class_tag);
}
GDExtensionObjectPtr cgo_GDExtensionInterfaceObjectGetInstanceFromId(const GDExtensionInterfaceObjectGetInstanceFromId fn,GDObjectInstanceID p_instance_id) {
	return fn(p_instance_id);
}
GDObjectInstanceID cgo_GDExtensionInterfaceObjectGetInstanceId(const GDExtensionInterfaceObjectGetInstanceId fn,GDExtensionConstObjectPtr p_object) {
	return fn(p_object);
}
GDExtensionBool cgo_GDExtensionInterfaceObjectHasScriptMethod(const GDExtensionInterfaceObjectHasScriptMethod fn,GDExtensionConstObjectPtr p_object,GDExtensionConstStringNamePtr p_method) {
	return fn(p_object,p_method);
}
void cgo_GDExtensionInterfaceObjectCallScriptMethod(const GDExtensionInterfaceObjectCallScriptMethod fn,GDExtensionObjectPtr p_object,GDExtensionConstStringNamePtr p_method,const GDExtensionConstVariantPtr *  p_args,GDExtensionInt p_argument_count,GDExtensionUninitializedVariantPtr r_return,GDExtensionCallError *  r_error) {
 fn(p_object,p_method,p_args,p_argument_count,r_return,r_error);
}
GDExtensionObjectPtr cgo_GDExtensionInterfaceRefGetObject(const GDExtensionInterfaceRefGetObject fn,GDExtensionConstRefPtr p_ref) {
	return fn(p_ref);
}
void cgo_GDExtensionInterfaceRefSetObject(const GDExtensionInterfaceRefSetObject fn,GDExtensionRefPtr p_ref,GDExtensionObjectPtr p_object) {
 fn(p_ref,p_object);
}
GDExtensionScriptInstancePtr cgo_GDExtensionInterfaceScriptInstanceCreate(const GDExtensionInterfaceScriptInstanceCreate fn,const GDExtensionScriptInstanceInfo *  p_info,GDExtensionScriptInstanceDataPtr p_instance_data) {
	return fn(p_info,p_instance_data);
}
GDExtensionScriptInstancePtr cgo_GDExtensionInterfaceScriptInstanceCreate2(const GDExtensionInterfaceScriptInstanceCreate2 fn,const GDExtensionScriptInstanceInfo2 *  p_info,GDExtensionScriptInstanceDataPtr p_instance_data) {
	return fn(p_info,p_instance_data);
}
GDExtensionScriptInstancePtr cgo_GDExtensionInterfaceScriptInstanceCreate3(const GDExtensionInterfaceScriptInstanceCreate3 fn,const GDExtensionScriptInstanceInfo3 *  p_info,GDExtensionScriptInstanceDataPtr p_instance_data) {
	return fn(p_info,p_instance_data);
}
GDExtensionScriptInstancePtr cgo_GDExtensionInterfacePlaceHolderScriptInstanceCreate(const GDExtensionInterfacePlaceHolderScriptInstanceCreate fn,GDExtensionObjectPtr p_language,GDExtensionObjectPtr p_script,GDExtensionObjectPtr p_owner) {
	return fn(p_language,p_script,p_owner);
}
void cgo_GDExtensionInterfacePlaceHolderScriptInstanceUpdate(const GDExtensionInterfacePlaceHolderScriptInstanceUpdate fn,GDExtensionScriptInstancePtr p_placeholder,GDExtensionConstTypePtr p_properties,GDExtensionConstTypePtr p_values) {
 fn(p_placeholder,p_properties,p_values);
}
GDExtensionScriptInstanceDataPtr cgo_GDExtensionInterfaceObjectGetScriptInstance(const GDExtensionInterfaceObjectGetScriptInstance fn,GDExtensionConstObjectPtr p_object,GDExtensionObjectPtr p_language) {
	return fn(p_object,p_language);
}
void cgo_GDExtensionInterfaceCallableCustomCreate(const GDExtensionInterfaceCallableCustomCreate fn,GDExtensionUninitializedTypePtr r_callable,GDExtensionCallableCustomInfo *  p_callable_custom_info) {
 fn(r_callable,p_callable_custom_info);
}
void cgo_GDExtensionInterfaceCallableCustomCreate2(const GDExtensionInterfaceCallableCustomCreate2 fn,GDExtensionUninitializedTypePtr r_callable,GDExtensionCallableCustomInfo2 *  p_callable_custom_info) {
 fn(r_callable,p_callable_custom_info);
}
void *  cgo_GDExtensionInterfaceCallableCustomGetUserData(const GDExtensionInterfaceCallableCustomGetUserData fn,GDExtensionConstTypePtr p_callable,void *  p_token) {
	return fn(p_callable,p_token);
}
GDExtensionObjectPtr cgo_GDExtensionInterfaceClassdbConstructObject(const GDExtensionInterfaceClassdbConstructObject fn,GDExtensionConstStringNamePtr p_classname) {
	return fn(p_classname);
}
GDExtensionMethodBindPtr cgo_GDExtensionInterfaceClassdbGetMethodBind(const GDExtensionInterfaceClassdbGetMethodBind fn,GDExtensionConstStringNamePtr p_classname,GDExtensionConstStringNamePtr p_methodname,GDExtensionInt p_hash) {
	return fn(p_classname,p_methodname,p_hash);
}
void *  cgo_GDExtensionInterfaceClassdbGetClassTag(const GDExtensionInterfaceClassdbGetClassTag fn,GDExtensionConstStringNamePtr p_classname) {
	return fn(p_classname);
}
void cgo_GDExtensionInterfaceClassdbRegisterExtensionClass(const GDExtensionInterfaceClassdbRegisterExtensionClass fn,GDExtensionClassLibraryPtr p_library,GDExtensionConstStringNamePtr p_class_name,GDExtensionConstStringNamePtr p_parent_class_name,const GDExtensionClassCreationInfo *  p_extension_funcs) {
 fn(p_library,p_class_name,p_parent_class_name,p_extension_funcs);
}
void cgo_GDExtensionInterfaceClassdbRegisterExtensionClass2(const GDExtensionInterfaceClassdbRegisterExtensionClass2 fn,GDExtensionClassLibraryPtr p_library,GDExtensionConstStringNamePtr p_class_name,GDExtensionConstStringNamePtr p_parent_class_name,const GDExtensionClassCreationInfo2 *  p_extension_funcs) {
 fn(p_library,p_class_name,p_parent_class_name,p_extension_funcs);
}
void cgo_GDExtensionInterfaceClassdbRegisterExtensionClass3(const GDExtensionInterfaceClassdbRegisterExtensionClass3 fn,GDExtensionClassLibraryPtr p_library,GDExtensionConstStringNamePtr p_class_name,GDExtensionConstStringNamePtr p_parent_class_name,const GDExtensionClassCreationInfo3 *  p_extension_funcs) {
 fn(p_library,p_class_name,p_parent_class_name,p_extension_funcs);
}
void cgo_GDExtensionInterfaceClassdbRegisterExtensionClassMethod(const GDExtensionInterfaceClassdbRegisterExtensionClassMethod fn,GDExtensionClassLibraryPtr p_library,GDExtensionConstStringNamePtr p_class_name,const GDExtensionClassMethodInfo *  p_method_info) {
 fn(p_library,p_class_name,p_method_info);
}
void cgo_GDExtensionInterfaceClassdbRegisterExtensionClassVirtualMethod(const GDExtensionInterfaceClassdbRegisterExtensionClassVirtualMethod fn,GDExtensionClassLibraryPtr p_library,GDExtensionConstStringNamePtr p_class_name,const GDExtensionClassVirtualMethodInfo *  p_method_info) {
 fn(p_library,p_class_name,p_method_info);
}
void cgo_GDExtensionInterfaceClassdbRegisterExtensionClassIntegerConstant(const GDExtensionInterfaceClassdbRegisterExtensionClassIntegerConstant fn,GDExtensionClassLibraryPtr p_library,GDExtensionConstStringNamePtr p_class_name,GDExtensionConstStringNamePtr p_enum_name,GDExtensionConstStringNamePtr p_constant_name,GDExtensionInt p_constant_value,GDExtensionBool p_is_bitfield) {
 fn(p_library,p_class_name,p_enum_name,p_constant_name,p_constant_value,p_is_bitfield);
}
void cgo_GDExtensionInterfaceClassdbRegisterExtensionClassProperty(const GDExtensionInterfaceClassdbRegisterExtensionClassProperty fn,GDExtensionClassLibraryPtr p_library,GDExtensionConstStringNamePtr p_class_name,const GDExtensionPropertyInfo *  p_info,GDExtensionConstStringNamePtr p_setter,GDExtensionConstStringNamePtr p_getter) {
 fn(p_library,p_class_name,p_info,p_setter,p_getter);
}
void cgo_GDExtensionInterfaceClassdbRegisterExtensionClassPropertyIndexed(const GDExtensionInterfaceClassdbRegisterExtensionClassPropertyIndexed fn,GDExtensionClassLibraryPtr p_library,GDExtensionConstStringNamePtr p_class_name,const GDExtensionPropertyInfo *  p_info,GDExtensionConstStringNamePtr p_setter,GDExtensionConstStringNamePtr p_getter,GDExtensionInt p_index) {
 fn(p_library,p_class_name,p_info,p_setter,p_getter,p_index);
}
void cgo_GDExtensionInterfaceClassdbRegisterExtensionClassPropertyGroup(const GDExtensionInterfaceClassdbRegisterExtensionClassPropertyGroup fn,GDExtensionClassLibraryPtr p_library,GDExtensionConstStringNamePtr p_class_name,GDExtensionConstStringPtr p_group_name,GDExtensionConstStringPtr p_prefix) {
 fn(p_library,p_class_name,p_group_name,p_prefix);
}
void cgo_GDExtensionInterfaceClassdbRegisterExtensionClassPropertySubgroup(const GDExtensionInterfaceClassdbRegisterExtensionClassPropertySubgroup fn,GDExtensionClassLibraryPtr p_library,GDExtensionConstStringNamePtr p_class_name,GDExtensionConstStringPtr p_subgroup_name,GDExtensionConstStringPtr p_prefix) {
 fn(p_library,p_class_name,p_subgroup_name,p_prefix);
}
void cgo_GDExtensionInterfaceClassdbRegisterExtensionClassSignal(const GDExtensionInterfaceClassdbRegisterExtensionClassSignal fn,GDExtensionClassLibraryPtr p_library,GDExtensionConstStringNamePtr p_class_name,GDExtensionConstStringNamePtr p_signal_name,const GDExtensionPropertyInfo *  p_argument_info,GDExtensionInt p_argument_count) {
 fn(p_library,p_class_name,p_signal_name,p_argument_info,p_argument_count);
}
void cgo_GDExtensionInterfaceClassdbUnregisterExtensionClass(const GDExtensionInterfaceClassdbUnregisterExtensionClass fn,GDExtensionClassLibraryPtr p_library,GDExtensionConstStringNamePtr p_class_name) {
 fn(p_library,p_class_name);
}
void cgo_GDExtensionInterfaceGetLibraryPath(const GDExtensionInterfaceGetLibraryPath fn,GDExtensionClassLibraryPtr p_library,GDExtensionUninitializedStringPtr r_path) {
 fn(p_library,r_path);
}
void cgo_GDExtensionInterfaceEditorAddPlugin(const GDExtensionInterfaceEditorAddPlugin fn,GDExtensionConstStringNamePtr p_class_name) {
 fn(p_class_name);
}
void cgo_GDExtensionInterfaceEditorRemovePlugin(const GDExtensionInterfaceEditorRemovePlugin fn,GDExtensionConstStringNamePtr p_class_name) {
 fn(p_class_name);
}
void cgo_GDExtensionsInterfaceEditorHelpLoadXmlFromUtf8Chars(const GDExtensionsInterfaceEditorHelpLoadXmlFromUtf8Chars fn,const char *  p_data) {
 fn(p_data);
}
void cgo_GDExtensionsInterfaceEditorHelpLoadXmlFromUtf8CharsAndLen(const GDExtensionsInterfaceEditorHelpLoadXmlFromUtf8CharsAndLen fn,const char *  p_data,GDExtensionInt p_size) {
 fn(p_data,p_size);
}



// -------------------- Structs ------------------------- 
void cgo_GDExtensionInitialization_initialize(const GDExtensionInitialization * p_struct,void *  userdata,GDExtensionInitializationLevel p_level) {
 p_struct->initialize(userdata,p_level);
}
void cgo_GDExtensionInitialization_deinitialize(const GDExtensionInitialization * p_struct,void *  userdata,GDExtensionInitializationLevel p_level) {
 p_struct->deinitialize(userdata,p_level);
}
